			// Finally figured out how to fill IMM forms with dictionary
			
			string[] p = new string[] { "jacky", "47" };
            Dictionary<string, string> IMM5257 = new Dictionary<string, string>() {

                ["form1.personaldetails.familyName"] = p[0],
                ["form1.personaldetails.age"] = p[1]
            };

            foreach(KeyValuePair<string,string> kvp in IMM5257) {
                Console.WriteLine($"{kvp.Key}'s value is {kvp.Value.ToString()}");

            }

			// a example of filling xfa form
			using System.Collections.Generic;
using System.Linq;
using Aspose.Pdf;
using System.IO;

namespace Aspose
{
    class Program
    {
        static void Main(string[] args)
        {
            // writePdf1();
            writePDF2();
        }
// This method used to fill form based on a template and create a new pdf file. But it will break the reader enable right
        private static void fillPDF1()
        {
            // Load XFA form
            Document doc = new Document("c:/vba/imm5709.pdf");
            // Get names of XFA form fields
            string[] names = doc.Form.XFA.FieldNames;
            // Set field values
            doc.Form.XFA[@"form1.Page1.PersonalDetails.Name.FamilyName"] = "Field 0";
            doc.Form.XFA[@"form1.Page1.PersonalDetails.Name.GivenName"] = "Field 1";
            doc.Form.XFA[@"form1.Page1.PersonalDetails.ServiceIn.UCIClientID"] = "12345678";
            doc.Form.XFA["form1.Page1.PersonalDetails.ApplyingFor.TRP"] = "1";
            doc.Form.XFA["form1.Page1.PersonalDetails.q3-4-5.sex.Sex"] = "Female";
            doc.Form.XFA["form1.Page1.PersonalDetails.q3-4-5.pob.PlaceBirthCountry"] = "203";
            doc.Form.XFA["form1.Page1.PersonalDetails.Citizenship.Citizenship"] = "203";
            doc.Form.XFA["form1.Page1.PersonalDetails.CurrentCOR.CurrentCOR.Row2.FromDate"] = "2016-01-01";
            // Save the updated document
            doc.Save("c:/vba/Filled_XFA.pdf");
        }
// this method used to fill form in original pdf, will preserve the user right extension 
        public static void writePDF2()
        {

            // Read the source PDF form with FileAccess of Read and Write.
            // We need ReadWrite permission because after modification,
            // we need to save the updated contents in same document/file.
            FileStream fs = new FileStream("c:/vba/imm5709.pdf", FileMode.Open, FileAccess.ReadWrite);
            // Instantiate Document instance
            Aspose.Pdf.Document pdfDocument = new Aspose.Pdf.Document(fs);
            
            // use linq to access database
            dcDataContext dc = new dcDataContext();
            tblPerson person= dc.tblPersons.SingleOrDefault(x => x.Id == 1); // use person id to get one person

            // establish the dictionary, mapping xfa node and value
            Dictionary<string, string> imm5709 = new Dictionary<string, string>();
            imm5709.Add("form1.Page1.PersonalDetails.Name.FamilyName", person.FirstName);
            imm5709.Add("form1.Page1.PersonalDetails.Name.GivenName", person.LastName);
            imm5709.Add("form1.Page1.PersonalDetails.ServiceIn.UCIClientID", person.UCI.ToString());
            imm5709.Add("form1.Page1.PersonalDetails.ApplyingFor.TRP", "1");
            imm5709.Add("form1.Page1.PersonalDetails.q3-4-5.sex.Sex", "Female");
            imm5709.Add("form1.Page1.PersonalDetails.q3-4-5.pob.PlaceBirthCountry", "203");
            imm5709.Add("form1.Page1.PersonalDetails.Citizenship.Citizenship", "203");
            imm5709.Add("form1.Page1.PersonalDetails.CurrentCOR.CurrentCOR.Row2.FromDate", "2016-01-01");

            foreach (KeyValuePair<string,string> kvp in imm5709) {
                pdfDocument.Form.XFA[kvp.Key]= kvp.Value;
            }

            // Save the updated document in save FileStream
            pdfDocument.Save();
            // Close the File Stream object
            fs.Close();

        }
    }
}